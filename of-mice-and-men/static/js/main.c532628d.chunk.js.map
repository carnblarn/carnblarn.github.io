{"version":3,"sources":["Tiles.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Piece","tile","startingLeft","startingTop","squares","i","j","top","left","push","style","height","position","width","justifyContent","alignItems","display","fontWeight","outline","border","App","className","paddingTop","src","Tiles","map","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qQAAe,G,MAAA,CACX,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,QCtEvBA,EAAyB,SAAC,GAG5B,IAHqE,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAC5CC,EAAU,GAEPC,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IACMC,EAdG,GAckBF,EACrBG,EAfG,GAemBF,EAC5BF,EAAQK,KACJ,yBACIC,MAAO,CACHC,OAnBH,GAoBGJ,MACAC,OACAI,SAAU,WACVC,MAvBH,GAwBGC,eAAgB,SAChBC,WAAY,SACZC,QAAS,OACTC,WAAY,SAGfhB,EAAKI,GAAGC,KAKzB,OACI,kBAAC,IAAD,KACI,yBACII,MAAO,CACHE,SAAU,QACVJ,KAAMN,EAAe,IACrBK,IAAKJ,EAAc,IACnBe,QAAS,EACTC,OAAQ,mBAGZ,yBACIT,MAAO,CACHE,SAAU,WACVD,OAAQ,IACRE,MAAO,MAGVT,MA2BNgB,EApBO,WAClB,OACI,yBAAKC,UAAU,MAAMX,MAAO,CAAEY,WAAY,EAAGX,OAAQ,OACjD,yBACIY,IAAI,kCACJb,MAAO,CAAEC,OAAQ,OAEpBa,EAAMC,KAAI,SAACxB,EAAMI,GACd,OACI,kBAAC,EAAD,CACIH,aAAeG,EAAI,EAAK,IACxBF,YAAaE,EAAI,EAAI,IAAM,EAC3BJ,KAAMA,SCjEVyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c532628d.chunk.js","sourcesContent":["export default [\n    [\n        ['M', 'E', 'M', 'B', 'E'],\n        ['A', 'N', 'E', 'A', 'R'],\n        ['C', 'A', 'D', 'E', 'T'],\n        ['A', 'T', 'I', 'S', 'O'],\n        ['W', 'E', 'C', 'H', 'T'],\n    ],\n    [\n        ['S', 'V', 'G', 'O', 'U'],\n        ['H', 'A', 'R', 'E', 'M'],\n        ['T', 'L', 'O', 'I', 'S'],\n        ['N', 'E', 'M', 'M', 'E'],\n        ['Y', 'T', 'T', 'R', 'O'],\n    ],\n    [\n        ['S', 'P', 'O', 'G', 'G'],\n        ['H', 'I', 'R', 'O', 'U'],\n        ['A', 'N', 'E', 'R', 'T'],\n        ['L', 'O', 'O', 'G', 'O'],\n        ['E', 'Z', 'N', 'I', 'C'],\n    ],\n    [\n        ['A', 'J', 'I', 'J', 'A'],\n        ['N', 'U', 'M', 'A', 'N'],\n        ['F', 'R', 'A', 'C', 'C'],\n        ['R', 'A', 'G', 'E', 'H'],\n        ['Y', 'R', 'O', 'T', 'O'],\n    ],\n    [\n        ['O', 'E', 'V', 'R', 'I'],\n        ['X', 'M', 'A', 'S', 'N'],\n        ['T', 'R', 'A', 'C', 'K'],\n        ['E', 'P', 'L', 'U', 'S'],\n        ['N', 'O', 'S', 'E', 'Y'],\n    ],\n    [\n        ['L', 'A', 'U', 'R', 'D'],\n        ['L', 'U', 'P', 'I', 'A'],\n        ['E', 'R', 'A', 'Z', 'Z'],\n        ['G', 'L', 'I', 'Z', 'Z'],\n        ['O', 'A', 'M', 'O', 'Y'],\n    ],\n    [\n        ['P', 'E', 'T', 'E', 'R'],\n        ['N', 'O', 'B', 'L', 'E'],\n        ['A', 'V', 'A', 'N', 'T'],\n        ['G', 'I', 'R', 'I', 'S'],\n        ['S', 'M', 'U', 'E', 'N'],\n    ],\n    [\n        ['P', 'L', 'A', 'N', 'T'],\n        ['M', 'E', 'S', 'A', 'I'],\n        ['O', 'M', 'R', 'P', 'H'],\n        ['S', 'O', 'A', 'P', 'Y'],\n        ['S', 'N', 'Y', 'D', 'Q'],\n    ],\n    [\n        ['G', 'A', 'R', 'P', 'H'],\n        ['E', 'N', 'O', 'L', 'A'],\n        ['R', 'I', 'V', 'O', 'L'],\n        ['O', 'V', 'I', 'D', 'O'],\n        ['L', 'A', 'C', 'E', 'N'],\n    ],\n    [\n        ['V', 'O', 'T', 'E', 'D'],\n        ['A', 'C', 'T', 'R', 'A'],\n        ['G', 'I', 'A', 'N', 'T'],\n        ['A', 'R', 'L', 'I', 'Z'],\n        ['N', 'A', 'L', 'E', 'O'],\n    ],\n    [\n        ['S', 'C', 'A', 'F', 'F'],\n        ['T', 'U', 'T', 'O', 'R'],\n        ['R', 'I', 'S', 'Q', 'Y'],\n        ['O', 'F', 'E', 'U', 'D'],\n        ['P', 'S', 'A', 'E', 'E'],\n    ],\n    [\n        ['P', 'O', 'V', 'E', 'D'],\n        ['S', 'T', 'I', 'N', 'G'],\n        ['E', 'A', 'L', 'T', 'A'],\n        ['U', 'R', 'G', 'O', 'N'],\n        ['D', 'I', 'A', 'I', 'G'],\n    ],\n];\n","import React, { useState } from 'react';\nimport Draggable from 'react-draggable';\nimport './App.css';\nimport Tiles from './Tiles';\n\nconst squareHeight = 29;\n\ninterface Props {\n    startingLeft: number;\n    tile: string[][];\n    startingTop: number;\n}\n\nconst Piece: React.FC<Props> = ({ tile, startingLeft, startingTop }) => {\n    const squares = [];\n\n    for (let i = 0; i < 5; i++) {\n        for (let j = 0; j < 5; j++) {\n            const coord = i * 10 + j;\n            const top = squareHeight * i;\n            const left = squareHeight * j;\n            squares.push(\n                <div\n                    style={{\n                        height: squareHeight,\n                        top,\n                        left,\n                        position: 'absolute',\n                        width: squareHeight,\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        display: 'flex',\n                        fontWeight: 'bold',\n                    }}\n                >\n                    {tile[i][j]}\n                </div>\n            );\n        }\n    }\n    return (\n        <Draggable>\n            <div\n                style={{\n                    position: 'fixed',\n                    left: startingLeft + 400,\n                    top: startingTop + 600,\n                    outline: 0,\n                    border: '1px solid #222',\n                }}\n            >\n                <div\n                    style={{\n                        position: 'relative',\n                        height: 5 * squareHeight,\n                        width: 5 * squareHeight,\n                    }}\n                >\n                    {squares}\n                </div>\n            </div>\n        </Draggable>\n    );\n};\n\nconst App: React.FC = () => {\n    return (\n        <div className=\"App\" style={{ paddingTop: 1, height: 1200 }}>\n            <img\n                src=\"https://i.imgur.com/JpVSl8j.png\"\n                style={{ height: 600 }}\n            />\n            {Tiles.map((tile, i) => {\n                return (\n                    <Piece\n                        startingLeft={(i % 7) * 200}\n                        startingTop={i > 6 ? 200 : 0}\n                        tile={tile}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}