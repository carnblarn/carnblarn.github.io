{"version":3,"sources":["data/db.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["board","answers","clue","word","accuracy","highestAccuracy","App","useState","boardIndex","setBoardIndex","boards","words","right","setRight","wrong","setWrong","grid","map","index","className","includes","onClick","toUpperCase","length","alert","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c77e06b0.chunk.js","sourcesContent":["export default [\n    {\n        board: [\n            'card',\n            'czech',\n            'drop',\n            'witch',\n            'gas',\n            'tube',\n            'pan',\n            'octopus',\n            'play',\n        ],\n        answers: ['witch', 'octopus', 'tube'],\n        clue: { word: 'tentacle', accuracy: '0.16' },\n        highestAccuracy: '0.16',\n    },\n    {\n        board: [\n            'europe',\n            'gold',\n            'figure',\n            'boom',\n            'tail',\n            'ivory',\n            'greece',\n            'pistol',\n            'face',\n        ],\n        answers: ['face', 'tail', 'figure'],\n        clue: { word: 'creature', accuracy: '0.16' },\n        highestAccuracy: '0.16',\n    },\n    {\n        board: [\n            'scale',\n            'figure',\n            'tick',\n            'robin',\n            'conductor',\n            'turkey',\n            'game',\n            'drill',\n            'shadow',\n        ],\n        answers: ['scale', 'conductor', 'drill'],\n        clue: { word: 'couplers', accuracy: '0.14' },\n        highestAccuracy: '0.14',\n    },\n    {\n        board: [\n            'australia',\n            'marble',\n            'point',\n            'film',\n            'court',\n            'stick',\n            'pumpkin',\n            'china',\n            'button',\n        ],\n        answers: ['court', 'point', 'marble'],\n        clue: { word: 'overlooks', accuracy: '0.14' },\n        highestAccuracy: '0.14',\n    },\n    {\n        board: [\n            'lawyer',\n            'eagle',\n            'czech',\n            'triangle',\n            'spy',\n            'snow',\n            'shot',\n            'crane',\n            'undertaker',\n        ],\n        answers: ['crane', 'shot', 'snow'],\n        clue: { word: 'load', accuracy: '0.12' },\n        highestAccuracy: '0.12',\n    },\n    {\n        board: [\n            'rock',\n            'fence',\n            'amazon',\n            'pyramid',\n            'buck',\n            'fall',\n            'australia',\n            'face',\n            'sub',\n        ],\n        answers: ['face', 'buck', 'rock'],\n        clue: { word: 'dick', accuracy: '0.11' },\n        highestAccuracy: '0.11',\n    },\n    {\n        board: [\n            'phoenix',\n            'cliff',\n            'centaur',\n            'code',\n            'duck',\n            'gold',\n            'tower',\n            'needle',\n            'sound',\n        ],\n        answers: ['tower', 'centaur', 'code'],\n        clue: { word: 'nuremberg', accuracy: '0.10' },\n        highestAccuracy: '0.10',\n    },\n    {\n        board: [\n            'piano',\n            'spy',\n            'robin',\n            'net',\n            'plane',\n            'gas',\n            'lap',\n            'boot',\n            'hospital',\n        ],\n        answers: ['piano', 'boot', 'plane'],\n        clue: { word: 'partitions', accuracy: '0.10' },\n        highestAccuracy: '0.10',\n    },\n    {\n        board: [\n            'tablet',\n            'undertaker',\n            'amazon',\n            'soul',\n            'plastic',\n            'pin',\n            'africa',\n            'scientist',\n            'france',\n        ],\n        answers: ['tablet', 'amazon', 'france'],\n        clue: { word: 'ces', accuracy: '0.10' },\n        highestAccuracy: '0.10',\n    },\n    {\n        board: [\n            'wall',\n            'pants',\n            'fly',\n            'temple',\n            'green',\n            'eye',\n            'shadow',\n            'eagle',\n            'chest',\n        ],\n        answers: ['wall', 'pants', 'green'],\n        clue: { word: 'patterned', accuracy: '0.09' },\n        highestAccuracy: '0.09',\n    },\n];\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport boards from './data/db';\n\nconst App: React.FC = () => {\n    const [boardIndex, setBoardIndex] = useState<number>(0);\n    const board = boards[boardIndex];\n    const words = board.board;\n\n    const [right, setRight] = useState<string[]>([]);\n    const [wrong, setWrong] = useState<string[]>([]);\n    const grid = words.map((word, index) => {\n        let className: string = 'piece';\n        if (right.includes(word)) {\n            className = 'piece correct';\n        } else if (wrong.includes(word)) {\n            className = 'piece incorrect';\n        }\n        return (\n            <>\n                {index % 3 === 0 && <div className=\"break\" />}\n\n                <div\n                    onClick={() => {\n                        if (\n                            board.answers.includes(word) &&\n                            !right.includes(word)\n                        ) {\n                            setRight([...right, word]);\n                        } else {\n                            setWrong([...wrong, word]);\n                        }\n                    }}\n                    className={className}\n                >\n                    {word.toUpperCase()}\n                </div>\n            </>\n        );\n    });\n\n    return (\n        <div className=\"App\">\n            <h2 className=\"title\">Codenames AI</h2>\n            <div className=\"helpText\">\n                Select the three words that are the closest match to the clue\n                provided by the computer\n            </div>\n            <div className=\"container\">{grid}</div>\n            <div className=\"clueText\">\n                CLUE:\n                <div className=\"clue\">{board.clue.word.toUpperCase()}</div>\n            </div>\n            <div className=\"nextBoardSection\">\n                <div>Board index: {boardIndex}</div>\n                <div\n                    className=\"nextBoardButton\"\n                    onClick={() => {\n                        if (boardIndex === boards.length - 1) {\n                            alert('thats all of them folks');\n                            return;\n                        }\n\n                        setBoardIndex(boardIndex + 1);\n                        setRight([]);\n                        setWrong([]);\n                    }}\n                >\n                    Next Board\n                </div>\n                <div className=\"disclaimer\">\n                    These boards have been randomly generated and ordered by the\n                    algorithms guess at the accuracy of the clue. The actual\n                    quality may vary\n                </div>\n                <div className=\"disclaimer\">\n                    Inspiration and intellectual heavy lifting provided by&nbsp;\n                    <a href=\"http://jsomers.net/glove-codenames/\">\n                        http://jsomers.net/glove-codenames/\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}